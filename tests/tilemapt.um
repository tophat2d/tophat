
import (
	"th.um"
	"rect.um"
	"atlas.um"
	"image.um"
	"canvas.um"
	"window.um"
	"tilemap.um"
)

var (
	t: tilemap::Tilemap
	cam: rect::Rect
)

fn init*() {
	window::setup("title", 1280, 720)
	window::setViewport(th::Vf2{192, 108})
	cam = rect::mk(0, 0, 192, 108)

	atl := atlas::mk(image::load("etc/atlas.png").item0, th::Vf2{4, 4})
	src := []th::uu{
		1, 1, 1, 0, 0, 1, 1, 1,
		0, 0, 1, 0, 0, 1, 0, 1,
		0, 1, 1, 1, 1, 1, 1, 1,
		0, 0, 0, 0, 1, 0, 1, 0}
	w := 8
	h := len(src) / w

	t = tilemap::mk(w, h, atl, 2)

	cfg := make([]th::uu, 16)
	cfg[tilemap::top | tilemap::bot] = 1
	cfg[tilemap::left | tilemap::right] = 2
	cfg[tilemap::left | tilemap::top] = 3
	cfg[tilemap::right | tilemap::top] = 4
	cfg[tilemap::left | tilemap::bot] = 5
	cfg[tilemap::bot | tilemap::right] = 6
	cfg[tilemap::left | tilemap::top | tilemap::right] = 7
	cfg[tilemap::left | tilemap::bot | tilemap::right] = 8
	cfg[tilemap::top | tilemap::right | tilemap::bot] = 9
	cfg[tilemap::top | tilemap::left | tilemap::bot] = 10
	cfg[tilemap::right] = 11
	cfg[tilemap::left] = 12
	cfg[tilemap::top] = 13
	cfg[tilemap::bot] = 14
	cfg[tilemap::top | tilemap::right | tilemap::bot | tilemap::left] = 15
	cfg[0] = 16

	t.autotile(src, cfg, 1)

	window::onFrame.register(|t|{
		canvas::drawRect(th::white, cam)

		t.draw({p: {0, 0}, s: {1, 1}})
	})
}
