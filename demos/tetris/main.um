import (
	"rect.um"
	"window.um"
	"canvas.um"
	"gameplay.um"
	"global.um"
	"std.um"
	"field.um"
	"fx.um"
	"input.um"
	"falling_piece.um"
	"background.um"
	"crazytext.um"
)

bgPlaying := true
var (
	scoreText: ^crazytext::Entry
	clearedText: ^crazytext::Entry
)

fn init*() {
	window::setup("bricks lol", 640, 480)

	global::initAudio()
	global::audioBackground.play()

	background::init()
	fx::init()
	field::setClearCallback(fx::clearEffect)
	gameplay::init()
	crazytext::init()
	scoreText = crazytext::putText("SCORE: 0", crazytext::lifetimeForever)
	clearedText = crazytext::putText("CLEARED: 0", crazytext::lifetimeForever, false)
	crazytext::putText("ARROW KEYS - MOVE", crazytext::lifetimeForever, false)
	crazytext::putText("Z, X, C - ROTATE", crazytext::lifetimeForever, false)
	crazytext::putText("M - MUTE", crazytext::lifetimeForever, false)

	window::onFrame.register({
		if input::isJustPressedc('M') {
			if bgPlaying {
				global::audioBackground.seekToFrame(std::rand() % global::audioBackground.frameCount())
				global::audioBackground.play()
			} else {
				global::audioBackground.stop()
			}
			bgPlaying = !bgPlaying
		}
		scoreText.text = sprintf("SCORE: %d", global::score)
		clearedText.text = sprintf("CLEARED: %d", gameplay::clears)
		gameplay::update()
		falling_piece::update(gameplay::speed)
		canvas::drawRect(0x000000FF, rect::mk(0, 0, window::wp.x, window::wp.y))
		background::update()
		background::draw()
		fx::draw()
	})
}
